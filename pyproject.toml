[tool.poetry]
name = "luthien-control"
version = "0.1.0"
description = "AI Control Framework - A proxy server for monitoring and controlling AI model API interactions"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{include = "luthien_control"}]

[tool.poetry.dependencies]
python = "^3.9"
fastapi = "^0.109.0"
uvicorn = "^0.27.0"
httpx = "^0.26.0"
pydantic = "^2.6.0"
python-dotenv = "^1.0.0"
requests = "^2.32.3"
brotli = "^1.1.0"
openai = "^1.68.2"
sqlalchemy = "^2.0.40"
asyncpg = "^0.30.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
mypy = "^1.8.0"
ipykernel = "^6.29.5"
pytest-asyncio = "^0.26.0"
pytest-cov = "^6.0.0"
bandit = "^1.8.3"
ruff = "^0.11.2"
pre-commit = "^4.2.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "--cov=luthien_control --cov-report=term-missing -m 'not integration'"
markers = [
    "integration: marks tests as integration tests that require external services"
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::UserWarning",
]

# Ruff configuration
[tool.ruff]
# Enable Pyflakes, pycodestyle error rules, and isort rules.
select = ["E", "F", "I"]
# Assume Python 3.9+ features.
# Adjust this to match your project's minimum Python version if needed.
target-version = "py39"
line-length = 120

[tool.ruff.lint]
# Add any specific rules you want to ignore or modify here later

[tool.ruff.format]
# Like Black
quote-style = "double"

# Bandit configuration
[tool.bandit]
# Files/directories to scan
targets = ["luthien_control"]
# Files/directories to exclude
# exclude_dirs = ["tests"] # Don't exclude tests entirely, just skip specific checks
# Recursively scan targets
recursive = true
# Trust nosec comments
skips = ["B104"] # We are intentionally using 0.0.0.0

# Specific configuration for tests directory
[tool.bandit.test]
skips = ["B101"] # Ignore assert_used warnings in test files
