name: Code Quality & Tests

on:
  pull_request:
    branches: [ main, dev ]
  push:
    branches: [ main, dev ]

jobs:
  quality-checks:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: luthien_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }} # Checkout the PR branch

      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version-file: 'pyproject.toml' # Use pyproject.toml directly

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root --with dev # Ensure dev dependencies (ruff, pyright) are installed

      - name: Install project (if not installed by dev dependencies)
        run: poetry install --no-interaction --no-root # Ensures project itself is importable by pyright if needed

      - name: Apply ruff formatting
        run: poetry run ruff format .

      - name: Apply ruff auto-fixes
        run: poetry run ruff check . --fix --exit-zero

      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "style: Apply ruff formatting and fixes"
          branch: ${{ github.head_ref }} # Push to the PR branch
          commit_options: '--no-verify --signoff'
          file_pattern: '*.py' # Only commit python files
          commit_user_name: "github-actions[bot]"
          commit_user_email: "github-actions[bot]@users.noreply.github.com"
          commit_author: "github-actions[bot] <github-actions[bot]@users.noreply.github.com>"

      - name: Check for remaining ruff issues
        run: poetry run ruff check .

      - name: Run Pyright type check
        run: poetry run pyright

      - name: Run unit tests
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/luthien_test
        run: poetry run pytest --cov=luthien_control --cov-report=xml --cov-report=term-missing

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          fail_ci_if_error: false