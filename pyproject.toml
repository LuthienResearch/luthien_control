[project]
name = "luthien-control"
version = "0.2.2"
description = "Intelligent proxy server for AI APIs"
authors = [
    {name = "Jai Dhyani",email = "jai@luthienresearch.org"}
]
readme = "README.md"
requires-python = ">=3.11,<4.0"
dependencies = [
    "fastapi (>=0.115.12,<0.116.0)",
    "uvicorn[standard] (>=0.34.0,<0.35.0)",
    "asyncpg (>=0.30.0,<0.31.0)",
    "httpx (>=0.28.1,<0.29.0)",
    "psycopg2-binary (>=2.9.10,<3.0.0)",
    "pre-commit (>=4.2.0,<5.0.0)",
    "brotli (>=1.1.0,<2.0.0)",
    "sqlalchemy[asyncio] (>=2.0.40,<3.0.0)",
    "alembic (>=1.15.2,<2.0.0)",
    "sqlmodel (>=0.0.24,<0.0.25)",
    "pdoc (>=15.0.3,<16.0.0)",
    "mkdocs-material (>=9.6.12,<10.0.0)",
]

[tool.poetry.group.dev.dependencies]
pytest = ">=8.3.5,<9.0.0"
pytest-cov = ">=6.0.0,<7.0.0"
ruff = ">=0.11.2,<0.12.0"
bandit = ">=1.8.3,<2.0.0"
respx = ">=0.22.0,<0.23.0"
pytest-asyncio = ">=0.26.0,<0.27.0"
python-dotenv = ">=1.1.0,<2.0.0"
pytest-mock = ">=3.14.0,<4.0.0"
radon = ">=6.0.1,<7.0.0"
pydeps = ">=3.0.1,<4.0.0"
pytest-profiling = ">=1.8.1,<2.0.0"
aiosqlite = ">=0.21.0,<0.22.0"
mkdocs = "^1.6.1"
mkdocs-material = "^9.6.12"
mkdocstrings = {extras = ["python"], version = "^0.29.1"}
pyright = "^1.1.400"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
pythonpath = [
  "."
]
markers = [
    "integration: marks tests as integration tests (excluded by default)",
    "unit: marks tests as unit tests (run by default)",
    "e2e: marks tests as end-to-end tests (excluded by default, requires network access)",
    "envvars(vars): mark test to set specific environment variables"
]
addopts = "-m 'not integration and not e2e'"
# Configure asyncio mode and loop scope
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.ruff]
# Enable black-compatible formatting.
# format = { quote-style = "double", indent-style = "space" } # Defaults are fine

src = ["luthien_control", "tests"]
line-length = 120 # Default is 88, matching Black

[tool.ruff.lint]
# Enable Pyflakes (F), pycodestyle (E, W), and isort (I) codes by default.
# For a full list of rules, see: https://docs.astral.sh/ruff/rules/
select = ["E", "F", "W", "I"]

# Optionally ignore specific rules or files
# ignore = ["E501"] # Example: ignore line too long
# exclude = ["docs/*"] # Example: exclude docs directory

[tool.pyright]
include = ["luthien_control", "tests"]
